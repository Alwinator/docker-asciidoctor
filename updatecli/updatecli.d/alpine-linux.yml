---
title: "Bump Alpine Linux Version"
sources:
  getAlpineLinuxVersion:
    kind: githubRelease
    name: "Get the latest Alpine Linux version"
    spec:
      owner: "alpinelinux"
      repository: "aports" # Its release process follows Alpine's
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
      versionFilter:
        kind: regex
        pattern: '3.13.(\d*)'
    transformers:
      - trimPrefix: "v"
conditions:
  testDockerfileArg:
    name: "Does the Dockerfile have an ARG instruction for the Alpine Linux version?"
    kind: dockerfile
    spec:
      file: Dockerfile
      instruction:
        keyword: "ARG"
        matcher: "alpine_version"
  testDockerImageExists:
    name: "Does the Docker Image exists on the Docker Hub?"
    kind: dockerImage
    spec:
      image: "alpine"
targets:
  updateDockerfileArgVersion:
    name: "Update the value of the base image (ARG alpine_version) in the Dockerfile"
    sourceID: getAlpineLinuxVersion
    kind: dockerfile
    spec:
      file: Dockerfile
      instruction:
        keyword: "ARG"
        matcher: "alpine_version"
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ requiredEnv .github.owner }}"
        repository: "{{ requiredEnv .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
  updateHarnessEnvAlpineVersion:
    name: "Update the key ALPINE_VERSION in the test harness env_vars.yml file"
    kind: yaml
    sourceID: getAlpineLinuxVersion
    spec:
      file: "tests/env_vars.yml"
      key: "ALPINE_VERSION"
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ requiredEnv .github.owner }}"
        repository: "{{ requiredEnv .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
